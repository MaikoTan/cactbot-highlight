---
'$schema': https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json

name: cactbot-timeline

patterns:
  - include: '#comment'
  - include: '#keywords'
  # match any double-quoted strings
  - include: '#strings'
  # match one line in timeline file
  - include: '#line'

repository:
  keywords:
    patterns:
      - name: keyword.control.timeline
        match: >
          (?x)
          \b
          (
            hideall|
            alertall|
            define|
            alertsound|
            alarmtext|
            alerttext|
            infotext|
            label|
            sync|
            window|
            jump|
            forcejump|
            duration
          )
          \b

  comment:
    begin: '#'
    beginCaptures:
      '0':
        name: punctuation.definition.comment.timeline
    end: '$|\n'
    name: comment.line.number-sign.timeline

  strings:
    name: string.quoted.double.timeline
    begin: '"'
    end: '"'
    patterns:
      - name: constant.character.escape.timeline
        match: '\\.'

  line:
    patterns:
      # 0.0 "--Reset--" sync / 21:........:40000010:/ window 10000 jump 0 duration 5
      #  ^       ^                     ^                       ^        ^          ^
      # #time #strings           #sync / regex             #window   #jump     #duration
      # Cactbot introduce a new syntax for timeline file in
      # https://github.com/quisquous/cactbot/issues/3547
      # 0.0 "--Reset--" Action { id: "123", name: "Prime Eden" } window 10000 jump 0 duration 5
      #  ^       ^                     ^                                  ^        ^          ^
      # #time #strings          #netsync / net regex                   #window   #jump     #duration
      - include: '#number'
      - include: '#strings'
      - include: '#comma'
      - include: '#regex'
      - include: '#netsync'

  regex:
    name: constant.regexp.timeline
    begin: '/'
    end: '(?<!\\)/' # match '/' which don't bebind '\'

    patterns:
      # escaped character in sync regex
      - name: constant.character.escape.regexp.timeline
        match: '\\.'

  netsync:
    name: definition.netsync.timeline
    begin: '\b(\w+)\s*(?={)'
    end: '(?<=})'
    beginCaptures:
      '1':
        name: entity.name.function.timeline
    contentName: meta.embedded.block.javascript
    patterns:
      - include: 'source.js'

  number:
    patterns:
      - match: >
          (?x)
            \b
            (\d+(\.\d+)?)   # int or float
            \b
        captures:
          '1':
            name: constant.numeric.timeline

  comma:
    match: ','
    name: punctuation.separator.timeline

scopeName: source.cactbot.timeline
